/* /tornado/src/style.css */
canvas {
  color: aqua;
  display: block;
}

body {
  overflow: hidden;
  background-color: hsl(173, 73%, 50%);
  min-height: 100vh;
  font-family: Roboto, Arial;
  color: #ADAFB6;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;
}


#loadingScreen {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgb(255, 255, 255);
  z-index: 90;
  align-items: center;
  justify-content: center;
  /* filter: brightness(0.8) opacity(0.9); */
}

#loadmsg {
  font-size: 24px;
  color: #000;
  display: flex;
  margin-bottom: 20px; /* Adjust margin to place the text above the boxes */
}

.boxes {
  --size: 32px;
  --duration: 800ms;
  height: calc(var(--size) * 2);
  width: calc(var(--size) * 3);
  position: relative;
  transform-style: preserve-3d;
  transform-origin: 50% 50%;
  margin-top: calc(var(--size) * 1.5 * -1);
  transform: rotateX(60deg) rotateZ(45deg) rotateY(0deg) translateZ(0px);
}

.boxes .box {
  width: var(--size);
  height: var(--size);
  top: 0;
  left: 0;
  position: absolute;
  transform-style: preserve-3d;
}

.boxes .box:nth-child(1) {
  transform: translate(100%, 0);
  animation: box1 var(--duration) linear infinite;
}

.boxes .box:nth-child(2) {
  transform: translate(0, 100%);
  animation: box2 var(--duration) linear infinite;
}

.boxes .box:nth-child(3) {
  transform: translate(100%, 100%);
  animation: box3 var(--duration) linear infinite;
}

.boxes .box:nth-child(4) {
  transform: translate(200%, 0);
  animation: box4 var(--duration) linear infinite;
}

.boxes .box > div {
  --background: #5C8DF6;
  --top: auto;
  --right: auto;
  --bottom: auto;
  --left: auto;
  --translateZ: calc(var(--size) / 2);
  --rotateY: 0deg;
  --rotateX: 0deg;
  position: absolute;
  width: 100%;
  height: 100%;
  background: var(--background);
  top: var(--top);
  right: var(--right);
  bottom: var(--bottom);
  left: var(--left);
  transform: rotateY(var(--rotateY)) rotateX(var(--rotateX)) translateZ(var(--translateZ));
}

.boxes .box > div:nth-child(1) {
  --top: 0;
  --left: 0;
}

.boxes .box > div:nth-child(2) {
  --background: #3A73D7;
  --right: 0;
  --rotateY: 90deg;
}

.boxes .box > div:nth-child(3) {
  --background: #4F82D7;
  --rotateX: -90deg;
}

.boxes .box > div:nth-child(4) {
  --background: #DBE3F4;
  --top: 0;
  --left: 0;
  --translateZ: calc(var(--size) * 3 * -1);
}

@keyframes box1 {
  0%, 50% {
    transform: translate(100%, 0);
  }
  100% {
    transform: translate(200%, 0);
  }
}

@keyframes box2 {
  0% {
    transform: translate(0, 100%);
  }
  50% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(100%, 0);
  }
}

@keyframes box3 {
  0%, 50% {
    transform: translate(100%, 100%);
  }
  100% {
    transform: translate(0, 100%);
  }
}

@keyframes box4 {
  0% {
    transform: translate(200%, 0);
  }
  50% {
    transform: translate(200%, 100%);
  }
  100% {
    transform: translate(100%, 100%);
  }
}

html {
  -webkit-font-smoothing: antialiased;
}

* {
  box-sizing: border-box;
}

*::before,
*::after {
  box-sizing: border-box;
}


body .dribbble {
  position: fixed;
  display: block;
  right: 20px;
  bottom: 20px;
}

body .dribbble img {
  display: block;
  height: 28px;
}

 #gameOverPopup2 {
  display: none;
}
/* Hamburger Menu Styles */
.hamburger {
  display: block;
  width: 30px;
  height: 25px;
  position: fixed;
  top: 10px; /* Position at top-left corner */
  right: 10px; /* Position on the left side */
  cursor: pointer;
  z-index: 60; /* Ensure it stays above other elements */
  background-color: #333; /* Dark background for the hamburger */
  padding: 10px;
  border-radius: 5px;
}

.hamburger div {
  background-color: #fff; /* White bars */
  height: 4px;
  margin: 4px 0;
  transition: 0.4s; /* Smooth transition */
}

/* Button Container Styles (Initially Hidden) */
.button-container {
  display: none;
  flex-direction: column;
  align-items: center;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Center the container */
  background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent black background */
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.5);
  z-index: 50;
  transition: all 0.3s ease; /* Smooth transition */
}

/* Show button container when the 'active' class is added */
.button-container.active {
  display: flex;
}

/* Button Styles */
.button-container button {
  background-color: #ff7f00; /* Orange background */
  width: 200px;
  color: white;              /* White text */
  border: none;              /* No border */
  border-radius: 8px;        /* Rounded corners */
  padding: 10px 20px;        /* Padding for better button size */
  font-size: 16px;           /* Consistent font size */
  font-family: 'Arial', sans-serif; /* Font for consistency */
  cursor: pointer;          /* Pointer cursor on hover */
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2); /* Soft shadow */
  transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transitions */
}

/* Individual button margin */
#startTornado, #restartGame, #soundToggleBtn {
  margin-bottom: 10px; /* Space between buttons */
}

/* Hover and Active Button Effects */
.button-container button:hover {
  background-color: #e67300; /* Darker orange on hover */
  transform: scale(1.05);    /* Slight zoom on hover */
}

.button-container button:active {
  background-color: #cc6600; /* Even darker orange on click */
  transform: scale(1);       /* Reset scale on click */
}

/* Canvas Styles */
#bg {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1; /* Keep canvas behind UI elements */
}
